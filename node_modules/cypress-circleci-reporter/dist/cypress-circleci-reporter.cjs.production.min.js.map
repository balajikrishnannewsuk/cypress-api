{"version":3,"file":"cypress-circleci-reporter.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["import { create } from 'xmlbuilder2';\nimport Mocha, { Runner, Suite, Test, MochaOptions } from 'mocha';\nimport createStatsCollector from 'mocha/lib/stats-collector';\nimport fs from 'fs';\nimport path from 'path';\nimport crypto from 'crypto';\nimport stripAnsi from 'strip-ansi';\n\nconst {\n  EVENT_RUN_END,\n  EVENT_TEST_FAIL,\n  EVENT_TEST_PASS,\n  EVENT_SUITE_BEGIN,\n} = Runner.constants;\n\n// A subset of invalid characters as defined in http://www.w3.org/TR/xml/#charsets that can occur in e.g. stacktraces\n// regex lifted from https://github.com/MylesBorins/xml-sanitizer/ (licensed MIT)\nconst INVALID_CHARACTERS_REGEX = /[\\u0000-\\u0008\\u000B\\u000C\\u000E-\\u001F\\u007f-\\u0084\\u0086-\\u009f\\uD800-\\uDFFF\\uFDD0-\\uFDFF\\uFFFF\\uC008]/g; // eslint-disable-line no-control-regex, max-len\n\nfunction removeInvalidCharacters(input: string) {\n  return input ? input.replace(INVALID_CHARACTERS_REGEX, '') : input;\n}\n\nfunction getClassname(test: Test) {\n  let { parent } = test;\n  const titles = [];\n  while (parent) {\n    if (parent.title) {\n      titles.unshift(parent.title);\n    }\n    parent = parent.parent;\n  }\n  return titles.join('.');\n}\n\nclass CypressCircleCIReporter extends Mocha.reporters.Base {\n  file = '';\n\n  constructor(runner: Runner, options?: MochaOptions) {\n    super(runner, options);\n\n    createStatsCollector(runner);\n    const projectPath: string | undefined = options?.reporterOptions?.project;\n    const resultsDir: string =\n      options?.reporterOptions?.resultsDir || './test_results/cypress';\n    const resultFileName: string =\n      options?.reporterOptions?.resultFileName || 'cypress-[hash]';\n\n    if (resultFileName.indexOf('[hash]') < 0) {\n      throw new Error(`resultFileName must contain '[hash]'`);\n    }\n\n    const resultFilePath = path.join(resultsDir, `${resultFileName}.xml`);\n\n    const root = create({ version: '1.0', encoding: 'UTF-8' }).ele(\n      'testsuite',\n      {\n        name: 'cypress',\n        timestamp: new Date().toISOString().slice(0, -5),\n      }\n    );\n\n    runner.on(EVENT_SUITE_BEGIN, (suite: Suite) => {\n      if (suite.file) {\n        this.file = path.join(projectPath || '', suite.file);\n      }\n    });\n\n    runner.on(EVENT_TEST_PASS, (test: Test) => {\n      root.ele('testcase', this.getTestcaseAttributes(test));\n    });\n\n    runner.on(EVENT_TEST_FAIL, (test: Test, err: any) => {\n      let message = '';\n      if (err.message && typeof err.message.toString === 'function') {\n        message = String(err.message);\n      } else if (typeof err.inspect === 'function') {\n        message = String(err.inspect());\n      }\n\n      const failureMessage = err.stack || message;\n\n      root\n        .ele('testcase', this.getTestcaseAttributes(test))\n        .ele('failure', {\n          message: removeInvalidCharacters(message) || '',\n          type: err.name || '',\n        })\n        .ele({ $: removeInvalidCharacters(failureMessage) });\n    });\n\n    runner.on(EVENT_RUN_END, () => {\n      root.att('time', ((runner.stats?.duration || 0) / 1000).toFixed(4));\n      root.att('tests', String(runner.stats?.tests || 0));\n      root.att('failures', String(runner.stats?.failures || 0));\n      root.att('skipped', String(runner.stats?.pending || 0));\n\n      const xmlText = root.end({ prettyPrint: true }).toString();\n\n      const finalPath = resultFilePath.replace(\n        '[hash]',\n        crypto\n          .createHash('md5')\n          .update(xmlText)\n          .digest('hex')\n      );\n\n      const finalPathDir = path.dirname(finalPath);\n\n      if (!fs.existsSync(finalPathDir)) {\n        fs.mkdirSync(finalPathDir, { recursive: true });\n      }\n      fs.writeFileSync(finalPath, xmlText, 'utf-8');\n    });\n  }\n\n  private getTestcaseAttributes = (test: Test) => {\n    return {\n      name: stripAnsi(test.title),\n      file: this.file,\n      time:\n        typeof test.duration === 'undefined'\n          ? 0\n          : (test.duration / 1000).toFixed(4),\n      classname: stripAnsi(getClassname(test)),\n    };\n  };\n}\n\nexport default CypressCircleCIReporter;\nmodule.exports = CypressCircleCIReporter;\n"],"names":["EVENT_RUN_END","EVENT_TEST_FAIL","EVENT_TEST_PASS","EVENT_SUITE_BEGIN","Runner","constants","INVALID_CHARACTERS_REGEX","removeInvalidCharacters","input","replace","getClassname","test","parent","titles","title","unshift","join","CypressCircleCIReporter","Mocha","reporters","Base","constructor","runner","options","name","stripAnsi","file","this","time","duration","toFixed","classname","createStatsCollector","projectPath","reporterOptions","_options$reporterOpti","project","resultsDir","resultFileName","indexOf","Error","resultFilePath","path","root","create","version","encoding","ele","timestamp","Date","toISOString","slice","on","suite","getTestcaseAttributes","err","message","toString","String","inspect","failureMessage","stack","type","$","att","stats","tests","failures","pending","xmlText","end","prettyPrint","finalPath","crypto","createHash","update","digest","finalPathDir","dirname","fs","existsSync","mkdirSync","recursive","writeFileSync","module","exports"],"mappings":"qUAQA,MAAMA,cACJA,EADIC,gBAEJA,EAFIC,gBAGJA,EAHIC,kBAIJA,GACEC,SAAOC,UAILC,EAA2B,4GAEjC,SAASC,EAAwBC,UACxBA,EAAQA,EAAMC,QAAQH,EAA0B,IAAME,EAG/D,SAASE,EAAaC,OAChBC,OAAEA,GAAWD,QACXE,EAAS,QACRD,GACDA,EAAOE,OACTD,EAAOE,QAAQH,EAAOE,OAExBF,EAASA,EAAOA,cAEXC,EAAOG,KAAK,KAGrB,MAAMC,UAAgCC,EAAMC,UAAUC,KAGpDC,YAAYC,EAAgBC,mBACpBD,EAAQC,aAHT,8BAgF0BZ,IACxB,CACLa,KAAMC,EAAUd,EAAKG,OACrBY,KAAMC,KAAKD,KACXE,UAC2B,IAAlBjB,EAAKkB,SACR,GACClB,EAAKkB,SAAW,KAAMC,QAAQ,GACrCC,UAAWN,EAAUf,EAAaC,MAnFpCqB,EAAqBV,SACfW,QAAkCV,kBAAAA,EAASW,wBAATC,EAA0BC,QAC5DC,SACJd,kBAAAA,EAASW,0BAAiBG,aAAc,yBACpCC,SACJf,kBAAAA,EAASW,0BAAiBI,iBAAkB,oBAE1CA,EAAeC,QAAQ,UAAY,QAC/B,IAAIC,oDAGNC,EAAiBC,EAAK1B,KAAKqB,KAAeC,SAE1CK,EAAOC,SAAO,CAAEC,QAAS,MAAOC,SAAU,UAAWC,IACzD,YACA,CACEvB,KAAM,UACNwB,WAAW,IAAIC,MAAOC,cAAcC,MAAM,GAAI,KAIlD7B,EAAO8B,GAAGjD,EAAoBkD,IACxBA,EAAM3B,YACHA,KAAOgB,EAAK1B,KAAKiB,GAAe,GAAIoB,EAAM3B,SAInDJ,EAAO8B,GAAGlD,EAAkBS,IAC1BgC,EAAKI,IAAI,WAAYpB,KAAK2B,sBAAsB3C,MAGlDW,EAAO8B,GAAGnD,EAAiB,CAACU,EAAY4C,SAClCC,EAAU,GACVD,EAAIC,SAA2C,mBAAzBD,EAAIC,QAAQC,SACpCD,EAAUE,OAAOH,EAAIC,SACW,mBAAhBD,EAAII,UACpBH,EAAUE,OAAOH,EAAII,kBAGjBC,EAAiBL,EAAIM,OAASL,EAEpCb,EACGI,IAAI,WAAYpB,KAAK2B,sBAAsB3C,IAC3CoC,IAAI,UAAW,CACdS,QAASjD,EAAwBiD,IAAY,GAC7CM,KAAMP,EAAI/B,MAAQ,KAEnBuB,IAAI,CAAEgB,EAAGxD,EAAwBqD,OAGtCtC,EAAO8B,GAAGpD,EAAe,iBACvB2C,EAAKqB,IAAI,mBAAU1C,EAAO2C,gBAAOpC,WAAY,GAAK,KAAMC,QAAQ,IAChEa,EAAKqB,IAAI,QAASN,iBAAOpC,EAAO2C,gBAAOC,QAAS,IAChDvB,EAAKqB,IAAI,WAAYN,iBAAOpC,EAAO2C,gBAAOE,WAAY,IACtDxB,EAAKqB,IAAI,UAAWN,iBAAOpC,EAAO2C,gBAAOG,UAAW,UAE9CC,EAAU1B,EAAK2B,IAAI,CAAEC,aAAa,IAAQd,WAE1Ce,EAAY/B,EAAehC,QAC/B,SACAgE,EACGC,WAAW,OACXC,OAAON,GACPO,OAAO,QAGNC,EAAenC,EAAKoC,QAAQN,GAE7BO,EAAGC,WAAWH,IACjBE,EAAGE,UAAUJ,EAAc,CAAEK,WAAW,IAE1CH,EAAGI,cAAcX,EAAWH,EAAS,YAkB3Ce,OAAOC,QAAUpE"}